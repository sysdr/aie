# docker-compose.yml - Orchestrates all services together
version: '3.8'

services:
  # User Authentication Service - Port 3001
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
    volumes:
      - ./services/user-service:/app
      - /app/node_modules
    networks:
      - quiz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Quiz Content Service - Port 3002  
  quiz-service:
    build:
      context: ./services/quiz-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
    volumes:
      - ./services/quiz-service:/app
      - /app/node_modules
    networks:
      - quiz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Results Processing Service - Port 3003
  results-service:
    build:
      context: ./services/results-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
    volumes:
      - ./services/results-service:/app
      - /app/node_modules
    networks:
      - quiz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

# Create a custom network so services can communicate securely
networks:
  quiz-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Optional: Add volume for persistent data storage
volumes:
  quiz-data:
    driver: local